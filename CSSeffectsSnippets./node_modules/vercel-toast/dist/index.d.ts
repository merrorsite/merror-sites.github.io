// Generated by dts-bundle-generator v5.1.0

export interface Action {
	text: string;
	callback?: ActionCallback;
}
export declare type Message = string | HTMLElement;
export declare type ActionCallback = (toast: Toast) => void;
export interface ToastOptions {
	/**
	 * Automatically destroy the toast in specific timeout (ms)
	 * @default `0` which means would not automatically destory the toast
	 */
	timeout?: number;
	/**
	 * Toast type
	 * @default `default`
	 */
	type?: 'success' | 'error' | 'warning' | 'dark' | 'default';
	action?: Action;
	cancel?: string;
}
export declare class Toast {
	message: Message;
	options: ToastOptions;
	el?: HTMLDivElement;
	private timeoutId?;
	constructor(message: Message, options?: ToastOptions);
	insert(): void;
	destory(): void;
	setContainer(): void;
	startTimer(): void;
	stopTimer(): void;
}
export declare function createToast(message: Message, options?: ToastOptions): Toast;
export declare function destoryAllToasts(): void;

export {};
